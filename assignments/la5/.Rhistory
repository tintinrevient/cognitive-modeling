ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations interkeypress 270", x="Dial time (s)", y="Average Lateral Deviation (m)")
## times for dialing
#singleTaskKeyPressTimes <- c(400,400,400,400,400,400,400,400,400,400,400)   #digit times needed per keypress at that specific position (note: normalized for chunk retrieval time at digits 1 and 6 --- a retrieval cost would come on top of this)
singleTaskKeyPressTimes <- rep(270, 11)
plotframe <- runAllSimpleStrategies(50, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
saveRDS(plotframe, "ss50sims270inter.Rda")
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations interkeypress 270", x="Dial time (s)", y="Average Lateral Deviation (m)")
## times for dialing
#singleTaskKeyPressTimes <- c(400,400,400,400,400,400,400,400,400,400,400)   #digit times needed per keypress at that specific position (note: normalized for chunk retrieval time at digits 1 and 6 --- a retrieval cost would come on top of this)
singleTaskKeyPressTimes <- rep(250, 11)
plotframe <- runAllSimpleStrategies(50, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
saveRDS(plotframe, "ss50sims250inter.Rda")
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations interkeypress 250", x="Dial time (s)", y="Average Lateral Deviation (m)")
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations", x="Dial time (s)", y="Average Lateral Deviation (m)")
#parameters for deviations in car drift due the simulator environment: See Janssen & Brumby (2010) page 1555
gaussDeviateMean <- 0
gaussDeviateSD <- 0.13 #0.06 # 0.13
#When the car is actively contorlled, we calculate a value using equation (1) in Janssen & Brumby (2010). However, some noise is added on top of this equation to account for variation in human behavior. See Janssen & Brumby (2010) page 1555. Also see function "updateSteering" on how this function is used
gaussDriveNoiseMean <- 0
gaussDriveNoiseSD <- 0.1 #0.03 # 0.1	#in meter/sec
plotframe <- runAllSimpleStrategies(50, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
saveRDS(plotframe, "ss50simsssd.Rda")
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations, sd 0.13 and guasianNoise 0.1", x="Dial time (s)", y="Average Lateral Deviation (m)")
plotframe <- runAllSimpleStrategies(200, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="200 Simulations", x="Dial time (s)", y="Average Lateral Deviation (m)")
#parameters for deviations in car drift due the simulator environment: See Janssen & Brumby (2010) page 1555
gaussDeviateMean <- 0
gaussDeviateSD <- 0.13 #0.06 # 0.13
#When the car is actively contorlled, we calculate a value using equation (1) in Janssen & Brumby (2010). However, some noise is added on top of this equation to account for variation in human behavior. See Janssen & Brumby (2010) page 1555. Also see function "updateSteering" on how this function is used
gaussDriveNoiseMean <- 0
gaussDriveNoiseSD <- 0.1 #0.03 # 0.1	#in meter/sec
plotframe <- runAllSimpleStrategies(200, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="200 Simulations, SD of drift 0.13 and gaussian drive noise 0.1 ", x="Dial time (s)", y="Average Lateral Deviation (m)")
#parameters for deviations in car drift due the simulator environment: See Janssen & Brumby (2010) page 1555
gaussDeviateMean <- 0
gaussDeviateSD <- 0.06 #0.06 # 0.13
#When the car is actively contorlled, we calculate a value using equation (1) in Janssen & Brumby (2010). However, some noise is added on top of this equation to account for variation in human behavior. See Janssen & Brumby (2010) page 1555. Also see function "updateSteering" on how this function is used
gaussDriveNoiseMean <- 0
gaussDriveNoiseSD <- 0.03 #0.03 # 0.1	#in meter/sec
gaussDeviateMean <- 0
gaussDeviateSD <- 0.06 #0.06 # 0.13
#When the car is actively contorlled, we calculate a value using equation (1) in Janssen & Brumby (2010). However, some noise is added on top of this equation to account for variation in human behavior. See Janssen & Brumby (2010) page 1555. Also see function "updateSteering" on how this function is used
gaussDriveNoiseMean <- 0
gaussDriveNoiseSD <- 0.03 #0.03 # 0.1	#in meter/sec
timeStepPerDriftUpdate <- 50 ### msec: what is the time interval between two updates of lateral position?
maxLateralVelocity <- 1.7	#maximum lateral velocity: what is the maximum that you can steer?
minLateralVelocity <- -1* maxLateralVelocity
startvelocity <- 0 	#a global parameter used to store the lateral velocity of the car
### all times in milliseconds
## times for dialing
#singleTaskKeyPressTimes <- c(400,400,400,400,400,400,400,400,400,400,400)   #digit times needed per keypress at that specific position (note: normalized for chunk retrieval time at digits 1 and 6 --- a retrieval cost would come on top of this)
singleTaskKeyPressTimes <- rep(400, 11)
plotframe <- runAllSimpleStrategies(200, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="200 Simulations, interkeypress 400 ", x="Dial time (s)", y="Average Lateral Deviation (m)")
steeringTimeOptions <- c(1,2,3,4,5,6,7,8,9,10,11,12)    #list op options for how many steering corrections can be made each time that attention is paid to steering (of steeringUpdateTime sec each) (this influences the strategy alternatives)
steeringUpdateTime <- 250    #in milliseconds
startingPositionInLane <- 0.27 			#assume that car starts already away from lane centre (in meters)
#parameters for deviations in car drift due the simulator environment: See Janssen & Brumby (2010) page 1555
gaussDeviateMean <- 0
gaussDeviateSD <- 0.06 #0.06 # 0.13
#When the car is actively contorlled, we calculate a value using equation (1) in Janssen & Brumby (2010). However, some noise is added on top of this equation to account for variation in human behavior. See Janssen & Brumby (2010) page 1555. Also see function "updateSteering" on how this function is used
gaussDriveNoiseMean <- 0
gaussDriveNoiseSD <- 0.03 #0.03 # 0.1	#in meter/sec
timeStepPerDriftUpdate <- 50 ### msec: what is the time interval between two updates of lateral position?
maxLateralVelocity <- 1.7	#maximum lateral velocity: what is the maximum that you can steer?
minLateralVelocity <- -1* maxLateralVelocity
startvelocity <- 0 	#a global parameter used to store the lateral velocity of the car
### all times in milliseconds
## times for dialing
#singleTaskKeyPressTimes <- c(400,400,400,400,400,400,400,400,400,400,400)   #digit times needed per keypress at that specific position (note: normalized for chunk retrieval time at digits 1 and 6 --- a retrieval cost would come on top of this)
singleTaskKeyPressTimes <- rep(270, 11)
plotframe <- readRDS("50sim12steer.Rda")#runAllSimpleStrategies(200, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
plotframe <- readRDS("50sim12steer.Rda")#runAllSimpleStrategies(200, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
humanData1 <- kpdwld %>%
filter(phoneNrLengthAfterKeyPress %in% c(1: 11),
typingErrorMadeOnTrial == 0,
partOfExperiment == "dualSteerFocus" | partOfExperiment == "dualDialFocus") %>%
mutate(lanePosition = abs(lanePosition),
Type = ifelse(partOfExperiment == "dualSteerFocus", "Steering-focus", "Dialing-focus")) %>%
group_by(Type) %>%
summarise(laneDeviation = mean(lanePosition, na.rm = TRUE),
seLanePos = sd(lanePosition, na.rm = TRUE) / sqrt(50))
View(humanData1)
humanData2 <- kpdwld %>%
filter(phoneNrLengthAfterKeyPress == 11,
typingErrorMadeOnTrial == 0,
partOfExperiment == "dualSteerFocus" | partOfExperiment == "dualDialFocus") %>%
mutate(lanePosition = abs(lanePosition),
Type = ifelse(partOfExperiment == "dualSteerFocus", "Steering-focus", "Dialing-focus")) %>%
group_by(Type) %>%
summarise(dialingTime = mean(timeRelativeToTrialStart, na.rm = TRUE) / 1000,
seDialTime = sd(timeRelativeToTrialStart / 1000, na.rm = TRUE) / sqrt(12))
View(humanData2)
humanData <- cbind.data.frame(humanData1, subset(humanData2, select = c(dialingTime, seDialTime)))
View(humanData)
ss <- subset(plotframe, strats == "5")
dialingFocusData <- humanData %>%
filter(Type == "Dialing-focus")
steeringFocusData <- humanData %>%
filter(Type == "Steering-focus")
View(steeringFocusData)
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations", x="Dial time (s)", y="Average Lateral Deviation (m)")
require(gtools)
library(tidyverse)
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations", x="Dial time (s)", y="Average Lateral Deviation (m)")
plotframe <- readRDS("50sim12steer.Rda")#runAllSimpleStrategies(200, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
humanData1 <- kpdwld %>%
filter(phoneNrLengthAfterKeyPress %in% c(1: 11),
typingErrorMadeOnTrial == 0,
partOfExperiment == "dualSteerFocus" | partOfExperiment == "dualDialFocus") %>%
mutate(lanePosition = abs(lanePosition),
Type = ifelse(partOfExperiment == "dualSteerFocus", "Steering-focus", "Dialing-focus")) %>%
group_by(Type) %>%
summarise(laneDeviation = mean(lanePosition, na.rm = TRUE),
seLanePos = sd(lanePosition, na.rm = TRUE) / sqrt(50))
View(humanData1)
humanData2 <- kpdwld %>%
filter(phoneNrLengthAfterKeyPress == 11,
typingErrorMadeOnTrial == 0,
partOfExperiment == "dualSteerFocus" | partOfExperiment == "dualDialFocus") %>%
mutate(lanePosition = abs(lanePosition),
Type = ifelse(partOfExperiment == "dualSteerFocus", "Steering-focus", "Dialing-focus")) %>%
group_by(Type) %>%
summarise(dialingTime = mean(timeRelativeToTrialStart, na.rm = TRUE) / 1000,
seDialTime = sd(timeRelativeToTrialStart / 1000, na.rm = TRUE) / sqrt(12))
View(humanData2)
humanData <- cbind.data.frame(humanData1, subset(humanData2, select = c(dialingTime, seDialTime)))
View(humanData)
ss <- subset(plotframe, strats == "5")
dialingFocusData <- humanData %>%
filter(Type == "Dialing-focus")
steeringFocusData <- humanData %>%
filter(Type == "Steering-focus")
View(steeringFocusData)
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations", x="Dial time (s)", y="Average Lateral Deviation (m)")
View(plotframe)
humanData <- cbind.data.frame(humanData1, subset(humanData2, select = c(dialingTime, seDialTime)))
View(humanData)
ss <- subset(plotframe, strats == "5")
dialingFocusData <- humanData %>%
filter(Type == "Dialing-focus")
steeringFocusData <- humanData %>%
filter(Type == "Steering-focus")
View(steeringFocusData)
kpdwld <- read.csv("keyPressDataWithLaneDeviation.csv")
plotframe <- readRDS("50sim12steer.Rda")#runAllSimpleStrategies(200, 12345678909)#readRDS("50sim.Rda")#runAllComplexStrategies(1, 12345678909)
humanData1 <- kpdwld %>%
filter(phoneNrLengthAfterKeyPress %in% c(1: 11),
typingErrorMadeOnTrial == 0,
partOfExperiment == "dualSteerFocus" | partOfExperiment == "dualDialFocus") %>%
mutate(lanePosition = abs(lanePosition),
Type = ifelse(partOfExperiment == "dualSteerFocus", "Steering-focus", "Dialing-focus")) %>%
group_by(Type) %>%
summarise(laneDeviation = mean(lanePosition, na.rm = TRUE),
seLanePos = sd(lanePosition, na.rm = TRUE) / sqrt(50))
View(humanData1)
humanData2 <- kpdwld %>%
filter(phoneNrLengthAfterKeyPress == 11,
typingErrorMadeOnTrial == 0,
partOfExperiment == "dualSteerFocus" | partOfExperiment == "dualDialFocus") %>%
mutate(lanePosition = abs(lanePosition),
Type = ifelse(partOfExperiment == "dualSteerFocus", "Steering-focus", "Dialing-focus")) %>%
group_by(Type) %>%
summarise(dialingTime = mean(timeRelativeToTrialStart, na.rm = TRUE) / 1000,
seDialTime = sd(timeRelativeToTrialStart / 1000, na.rm = TRUE) / sqrt(12))
View(humanData2)
humanData <- cbind.data.frame(humanData1, subset(humanData2, select = c(dialingTime, seDialTime)))
View(humanData)
ss <- subset(plotframe, strats == "5")
dialingFocusData <- humanData %>%
filter(Type == "Dialing-focus")
steeringFocusData <- humanData %>%
filter(Type == "Steering-focus")
View(steeringFocusData)
ggplot(data = plotframe) +
geom_point(mapping = aes(x = TrialTime, y = dev), color = "grey") +
geom_point(data = ss, mapping = aes(x = TrialTime, y = dev), color = "black", shape = 4) +
geom_segment(data = dialingFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = dialingFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_segment(data = steeringFocusData, mapping =
aes(x = dialingTime - seDialTime,
y = laneDeviation,
xend = dialingTime + seDialTime,
yend = laneDeviation)) +
geom_errorbar(data = steeringFocusData, mapping =
aes(x = dialingTime,
ymin = laneDeviation - seLanePos,
ymax = laneDeviation + seLanePos)) +
geom_point(data = dialingFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 22, size = 5, fill = "white") +
geom_point(data = steeringFocusData, mapping = aes(x = dialingTime, y = laneDeviation), shape = 23, size = 5, fill = "white") +
coord_trans(x = "log10") +
# coord_cartesian(xlim = c(0, 40), ylim = c(0.0, 0.8)) +
# scale_x_log10() +
labs(title="50 Simulations", x="Dial time (s)", y="Average Lateral Deviation (m)")
newframe <- tempFrame %>%
mutate(digits = trimws(strsplit(toString(strats[1:2]), ",")))
tempFrame <- plotframe
newframe <- tempFrame %>%
mutate(digits = trimws(strsplit(toString(strats[1:2]), ",")))
x <- tempFrame$strats
digits <- c()
for(i in 1: length(x)) {
y <- x[i]
z <- strsplit(toString(y), ",")
j <- length(z[[1]])
digits <- c(digits, j)
}
firstDigit <- c()
for(i in 1: length(x)) {
y <- x[i]
z <- strsplit(toString(y), ",")
j <- z[[1]][1]
firstDigit <- c(firstDigit, strtoi(j))
}
tempFrame$digits <- digits
tempFrame$firstDigit <- firstDigit
ggplot(data = tempFrame) + geom_histogram(mapping = aes(x = digits), binwidth = 1, color = "black", fill="white")
ggplot(data = tempFrame) + geom_histogram(mapping = aes(x = firstDigit), binwidth = 1, color = "black", fill="white")
View(tempFrame)
